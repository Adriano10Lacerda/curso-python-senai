{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "73b637f5-709a-4716-9aea-8865da284cf9",
   "metadata": {},
   "source": [
    "### Exercício 01 – \n",
    "Crie uma variável chamada \"idade\" e atribua um valor inteiro a ela.\n",
    "Verifique se a idade é maior ou igual a 18 e imprima \"Maior de idade\" ou \"Menor de\n",
    "idade\" de acordo com a condição."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a435c298-a870-4075-afad-3cc53dbfb453",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Informe sua idade:  20\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Menor de idade\n"
     ]
    }
   ],
   "source": [
    "idade = input('Informe sua idade: ')\n",
    "idade = int(idade)\n",
    "if idade < 18:\n",
    "    print('Menor de idade')\n",
    "else:\n",
    "    print('Menor de idade')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "341076bb-aa69-44de-a061-240839db0dac",
   "metadata": {},
   "source": [
    "Exercício 02 - \n",
    "\n",
    "Crie uma variável chamada \"número\" e atribua um valor inteiro a ela.\n",
    "Verifique se o número é positivo, negativo ou zero e imprima a mensagem\n",
    "correspondente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b9d894ec-91f9-40e7-8def-6956009fea32",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Informe um numero:  -1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Numero Negativo!!\n"
     ]
    }
   ],
   "source": [
    "num = input('Informe um numero: ')\n",
    "num = int(num)\n",
    "if num >0:\n",
    "    print('Numero Positivo!!')\n",
    "else:\n",
    "    print('Numero Negativo!!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "18414dcb-14c5-4e2c-b50a-abc7eff914e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Informe um numero:  -1\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Numero Negativo\n"
     ]
    }
   ],
   "source": [
    "num = input('Informe um numero: ')\n",
    "num = int(num)\n",
    "if num >0:\n",
    "    print('Numero Positivo!!')\n",
    "elif num <0:\n",
    "    print('Numero Negativo')\n",
    "else:\n",
    "    print('Nulo!!')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d028b2e-e4c2-4a76-95ec-a9069820fcbf",
   "metadata": {},
   "source": [
    "### Exercício 03 - \n",
    "Crie duas variáveis, \"nota1\" e \"nota2\", e atribua valores numéricos a elas.\n",
    "Verifique se a média das notas é maior ou igual a 7 e imprima \"Aprovado\" ou\n",
    "\"Reprovado\" de acordo com a condição."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "614db756-0203-4f40-bc0f-8309c43146cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite nota 1:  8\n",
      "Digite a nota 2:  8\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Você foi provado!! Sua media final foi 8.0, Parabens!!\n"
     ]
    }
   ],
   "source": [
    "nota1 = input('Digite nota 1: ')\n",
    "nota1 = int(nota1)\n",
    "nota2 = input('Digite a nota 2: ')\n",
    "nota2 = int(nota2)\n",
    "media = (nota1 + nota2)/2\n",
    "if media >=7:\n",
    "    print(f'Você foi provado!! Sua media final foi {media}, Parabens!!')\n",
    "else:\n",
    "    print(f'Você foi reprovado!! Sua media final foi {media}, Triste!!')      "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "65ad8579-3c76-4da1-9770-7c492b6d409a",
   "metadata": {},
   "source": [
    "### Exercício 04 -\n",
    "\n",
    "Crie uma variável chamada \"idade\" e atribua um valor inteiro a ela.\n",
    "Verifique se a idade está dentro do intervalo de 18 a 30 (inclusive) e imprima a\n",
    "mensagem \"Idade válida\" ou \"Idade inválida\" de acordo com a condição."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "77c7b764-e2cb-44bc-8138-b00483def2e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite sua idade:  24\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Idade Válidda\n"
     ]
    }
   ],
   "source": [
    "idade = int(input('Digite sua idade: '))\n",
    "if idade >=18 and idade <=30:\n",
    "    print('Idade Válidda')\n",
    "else:\n",
    "    print('Idade Inválidade')\n",
    "\n",
    "              "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7dd1053-2dbd-4ad3-9b7a-111c4663b3be",
   "metadata": {},
   "source": [
    "### Exercício 05 \n",
    "\n",
    "Crie uma variável chamada \"numero\" e atribua um valor inteiro a ela.\n",
    "Verifique se o número é par ou ímpar e imprima a mensagem correspondente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e535a05b-50fc-4452-8707-b3721b7efa04",
   "metadata": {},
   "outputs": [],
   "source": [
    "nun = int(input('Digite um numero: '))\n",
    "if num%2 == 0:\n",
    "          print('Numero Par!!')\n",
    "else:\n",
    "          print('Numero Impar!!')\n",
    "          "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39490c0e-8af0-46c0-b568-1238df60445c",
   "metadata": {},
   "source": [
    "### Exercício 06 \n",
    "\n",
    "Crie uma variável chamada \"horario\" e atribua um valor inteiro\n",
    "representando a hora do dia (em formato 24 horas). Verifique se o horário está dentro\n",
    "do período da manhã (das 6h às 12h), da tarde (das 12h às 18h) ou da noite (das 18h\n",
    "às 23h) e imprima a mensagem correspondente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4ad14597-13ac-4697-a039-59b884e65949",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite horario:  27\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Horario invalido!!\n"
     ]
    }
   ],
   "source": [
    "horario = int(input('Digite horario: '))\n",
    "if horario >=6 and horario <12:\n",
    "    print('Periodo da manha!!')\n",
    "elif horario >=12 and horario <18:\n",
    "    print('Periodo da tarde!!')\n",
    "elif horario >=18 and horario <0:\n",
    "    print('Boa noite!!')\n",
    "elif horario >=0 and horario <6:\n",
    "    print('Boa Madrugada!!')\n",
    "\n",
    "else:\n",
    "    print('Horario invalido!!')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1d58f5d-9d0d-4074-8ed3-7fddf7326c15",
   "metadata": {},
   "source": [
    "### Exercício 07 \n",
    "\n",
    "Crie uma variável chamada \"peso\" e atribua um valor numérico a ela.\n",
    "Verifique se o peso está dentro do intervalo de 50 a 100 (inclusive) e imprima a\n",
    "mensagem \"Peso válido\" ou \"Peso inválido\" de acordo com a condição."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f093f675-6dcb-4ec5-914a-6ab30563ab2b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite o peso:  101\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Peso Inválido\n"
     ]
    }
   ],
   "source": [
    "peso = int(input('Digite o peso: '))\n",
    "if peso >=50 and peso <=100:\n",
    "           print('Peso Válido')\n",
    "else:\n",
    "           print('Peso Inválido')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c0b0bfb-cb47-4729-9092-26caf71984c9",
   "metadata": {},
   "source": [
    "### Exercício 08 \n",
    "\n",
    "Crie uma variável chamada \"numero\" e atribua um valor inteiro a ela.\n",
    "Verifique se o número é múltiplo de 3 e de 5 ao mesmo tempo e imprima a mensagem\n",
    "correspondente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "975e425e-361f-4e1d-8e20-307149ad0453",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite um numero inteiro:  3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "O numero 3 não e multiplo de 3 e 5\n"
     ]
    }
   ],
   "source": [
    "num = int(input('Digite um numero inteiro: '))\n",
    "if num % 3 == 0 and num % 5 == 0:\n",
    "    print(f'O Numero {num}é multiplo de 3 e 5 ao mesmo tempo')\n",
    "\n",
    "else:\n",
    "    print(f'O numero {num} não e multiplo de 3 e 5')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "643c9f3a-8a91-48dd-99cc-82fae07a4c89",
   "metadata": {},
   "source": [
    "### Exercício 09 \n",
    "\n",
    "Crie uma variável chamada \"ano\" e atribua um valor inteiro\n",
    "representando um ano. Verifique se o ano é bissexto (divisível por 4, mas não por 100,\n",
    "exceto se for divisível por 400) e imprima a mensagem correspondente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "a1d3922a-68b9-4c8d-8d8d-b81ce0b2836e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite ano:  2021\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "O ano 2021, não e bissexto!!\n"
     ]
    }
   ],
   "source": [
    "ano = int(input('Digite ano: '))\n",
    "if (ano % 4 == 0 and ano % 100 != 0) or ano % 400 == 0:\n",
    "    print(f'O ano {ano} e bissexto!!')\n",
    "else:\n",
    "    print(f'O ano {ano}, não e bissexto!!')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7628580e-2f0d-4732-aa9a-05f6a56f02ac",
   "metadata": {},
   "source": [
    "### Exercício 10 \n",
    "\n",
    "Crie uma variável chamada \"salario\" e atribua um valor numérico a ela.\n",
    "Verifique se o salário é maior do que 1000 e menor do que 2000 ao mesmo tempo e\n",
    "imprima a mensagem correspondente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "03222428-5090-4044-b12b-e719fe9f4636",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite seu salario:R$  1000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Seu salario não e correspodente\n"
     ]
    }
   ],
   "source": [
    "salario = float(input('Digite seu salario:R$ '))\n",
    "if salario > 1000 and salario < 2000:\n",
    "                print('Seu salario e correspondente.')\n",
    "else:\n",
    "                      print('Seu salario não e correspodente')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "431c7431-5cce-4dcc-9393-1c55c628f8c1",
   "metadata": {},
   "source": [
    "### Exercício 11 \n",
    "\n",
    "Faça um Programa que peça dois números e imprima o maior deles."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "22d3d159-3953-4842-80a9-ec5a84e7fbe5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite primeiro numero:  7\n",
      "Digite segundo numero:  2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Numero 7 e maior\n"
     ]
    }
   ],
   "source": [
    "num1 = int(input('Digite primeiro numero: '))\n",
    "num2 = int(input('Digite segundo numero: '))\n",
    "if num1 > num2:\n",
    "           print(f'Numero {num1} e maior')\n",
    "else:\n",
    "           print(f'Numero {num2} e maior')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "352ada34-d3c7-47ed-b223-a5ad0c58253d",
   "metadata": {},
   "source": [
    "### Exercício 12 \n",
    "\n",
    "Faça um Programa que peça um valor e mostre na tela se o valor é\n",
    "positivo ou negativo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "64edbe62-da90-49bb-8078-ee74687193fc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite um numero:  5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Esse numero 5 e positivo.\n"
     ]
    }
   ],
   "source": [
    "num = int(input('Digite um numero: '))\n",
    "if num <0:\n",
    "          print(f'Esse numero {num} e negativo.')\n",
    "elif num >0:\n",
    "          print(f'Esse numero {num} e positivo.')\n",
    "else:\n",
    "    print('Nulo')\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1902396-bda8-40e2-952e-7c143f02254e",
   "metadata": {},
   "source": [
    "### Exercício 13 \n",
    "\n",
    "Faça um Programa que verifique se uma letra digitada é \"F\" ou \"M\".\n",
    "Conforme a letra escrever: F - Feminino, M - Masculino, Sexo Inválido."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "e951cd3b-84d2-4a9e-8a12-93edc2452d7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Digite seu sexo 1 e masculino e 2 feminino:  0\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sexo Invalido!!\n"
     ]
    }
   ],
   "source": [
    "sexo = input('Digite seu sexo 1 e masculino e 2 feminino: ')\n",
    "if sexo  == 1:\n",
    "    print('Seu sexo e feminino.')\n",
    "elif sexo  == 2:\n",
    "    print('Seu sexo e masculino.')\n",
    "else:\n",
    "    print('Sexo Invalido!!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b00e05f1-5c6a-4901-9ab9-032cb0d51cc7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
